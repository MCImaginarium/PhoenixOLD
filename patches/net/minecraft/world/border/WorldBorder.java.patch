--- ../src-base/minecraft/net/minecraft/world/border/WorldBorder.java
+++ ../src-work/minecraft/net/minecraft/world/border/WorldBorder.java
@@ -2,10 +2,14 @@
 
 import com.google.common.collect.Lists;
 import java.util.List;
+
+import org.bukkit.craftbukkit.util.LongHash;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
+import net.minecraft.world.WorldServer;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 
@@ -23,6 +27,7 @@
     private double damageBuffer;
     private int warningTime;
     private int warningDistance;
+    public WorldServer world; // CraftBukkit
 
     public WorldBorder()
     {
@@ -39,10 +44,21 @@
         return (double)(pos.getX() + 1) > this.minX() && (double)pos.getX() < this.maxX() && (double)(pos.getZ() + 1) > this.minZ() && (double)pos.getZ() < this.maxZ();
     }
 
-    public boolean contains(ChunkPos range)
-    {
-        return (double)range.getXEnd() > this.minX() && (double)range.getXStart() < this.maxX() && (double)range.getZEnd() > this.minZ() && (double)range.getZStart() < this.maxZ();
+    ///public boolean contains(ChunkPos range)
+    //{
+    //    return (double)range.getXEnd() > this.minX() && (double)range.getXStart() < this.maxX() && (double)range.getZEnd() > this.minZ() && (double)range.getZStart() < this.maxZ();
+    //} // CB start
+    public boolean contains(final ChunkPos range) {
+        return this.isInBounds(range.chunkXPos, range.chunkZPos);
     }
+    
+    public boolean isInBounds(final long chunkcoords) {
+        return this.isInBounds(LongHash.msw(chunkcoords), LongHash.lsw(chunkcoords));
+    }
+    
+    public boolean isInBounds(final int x, final int z) {
+        return (x << 4) + 15 > this.minX() && x << 4 < this.maxX() && (z << 4) + 15 > this.minZ() && x << 4 < this.maxZ();
+    } // CB end
 
     public boolean contains(AxisAlignedBB bb)
     {
@@ -199,6 +215,7 @@
 
     public void addListener(IBorderListener listener)
     {
+    	if(this.listeners.contains(listener))
         this.listeners.add(listener);
     }
 
